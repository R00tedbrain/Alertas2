import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import '../../domain/providers/providers.dart';
import '../../data/models/purchase_state.dart';

class TrialScreen extends ConsumerStatefulWidget {
  const TrialScreen({super.key});

  @override
  ConsumerState<TrialScreen> createState() => _TrialScreenState();
}

class _TrialScreenState extends ConsumerState<TrialScreen> {
  bool _isProcessing = false;

  @override
  Widget build(BuildContext context) {
    final canUseTrial = ref.watch(canUseTrialProvider);
    final trialProduct = ref.watch(trialProductProvider);
    final purchaseState = ref.watch(purchaseProvider);

    return Scaffold(
      backgroundColor: Colors.grey[100],
      appBar: AppBar(
        title: const Text('Prueba Gratuita'),
        backgroundColor: Colors.white,
        foregroundColor: Colors.black,
        elevation: 0,
      ),
      body: SafeArea(
        child: canUseTrial.when(
          data: (canUse) {
            if (!canUse) {
              return _buildTrialUnavailableView();
            }
            return _buildTrialAvailableView();
          },
          loading: () => const Center(child: CircularProgressIndicator()),
          error: (_, __) => _buildErrorView(),
        ),
      ),
    );
  }

  Widget _buildTrialAvailableView() {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(24),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          // T√≠tulo principal
          Container(
            padding: const EdgeInsets.all(20),
            decoration: BoxDecoration(
              color: Colors.blue[50],
              borderRadius: BorderRadius.circular(16),
              border: Border.all(color: Colors.blue[200]!),
            ),
            child: Column(
              children: [
                Icon(Icons.star, size: 48, color: Colors.blue[600]),
                const SizedBox(height: 16),
                Text(
                  'üéØ PRUEBA GRATUITA',
                  style: TextStyle(
                    fontSize: 24,
                    fontWeight: FontWeight.bold,
                    color: Colors.blue[800],
                  ),
                  textAlign: TextAlign.center,
                ),
                const SizedBox(height: 8),
                Text(
                  '7 d√≠as de acceso completo',
                  style: TextStyle(fontSize: 18, color: Colors.blue[700]),
                  textAlign: TextAlign.center,
                ),
              ],
            ),
          ),

          const SizedBox(height: 24),

          // Beneficios incluidos
          _buildBenefitsCard(),

          const SizedBox(height: 24),

          // Informaci√≥n despu√©s del trial
          _buildAfterTrialInfo(),

          const SizedBox(height: 32),

          // Bot√≥n principal
          _buildStartTrialButton(),

          const SizedBox(height: 16),

          // Informaci√≥n legal requerida
          _buildLegalInfo(),
        ],
      ),
    );
  }

  Widget _buildBenefitsCard() {
    return Container(
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.grey.withOpacity(0.1),
            spreadRadius: 2,
            blurRadius: 8,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text(
            'Incluido en tu prueba:',
            style: TextStyle(
              fontSize: 18,
              fontWeight: FontWeight.bold,
              color: Colors.black87,
            ),
          ),
          const SizedBox(height: 16),
          _buildBenefitItem(
            icon: Icons.audiotrack,
            title: 'Audio HD Premium',
            description: 'Stereo 44.1kHz @ 192kbps',
          ),
          _buildBenefitItem(
            icon: Icons.gps_fixed,
            title: 'GPS de M√°xima Precisi√≥n',
            description: 'Ubicaci√≥n exacta para emergencias',
          ),
          _buildBenefitItem(
            icon: Icons.security,
            title: 'Protecci√≥n Avanzada',
            description: 'Todas las funciones premium',
          ),
          _buildBenefitItem(
            icon: Icons.cancel,
            title: 'Sin Compromiso',
            description: 'Cancela cuando quieras',
          ),
        ],
      ),
    );
  }

  Widget _buildBenefitItem({
    required IconData icon,
    required String title,
    required String description,
  }) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 16),
      child: Row(
        children: [
          Container(
            padding: const EdgeInsets.all(8),
            decoration: BoxDecoration(
              color: Colors.green[100],
              borderRadius: BorderRadius.circular(8),
            ),
            child: Icon(icon, color: Colors.green[600], size: 24),
          ),
          const SizedBox(width: 16),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: const TextStyle(
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                    color: Colors.black87,
                  ),
                ),
                const SizedBox(height: 4),
                Text(
                  description,
                  style: TextStyle(fontSize: 14, color: Colors.grey[600]),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildAfterTrialInfo() {
    return Container(
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.orange[50],
        borderRadius: BorderRadius.circular(16),
        border: Border.all(color: Colors.orange[200]!),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Icon(Icons.schedule, color: Colors.orange[600], size: 24),
              const SizedBox(width: 12),
              Text(
                'Despu√©s de 7 d√≠as:',
                style: TextStyle(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Colors.orange[800],
                ),
              ),
            ],
          ),
          const SizedBox(height: 16),
          _buildAfterTrialItem(
            icon: Icons.check_circle,
            text: 'Funciones b√°sicas: SIEMPRE GRATUITAS',
            color: Colors.green,
          ),
          _buildAfterTrialItem(
            icon: Icons.star,
            text: 'Funciones premium: ‚Ç¨2.99/mes',
            color: Colors.orange,
          ),
          _buildAfterTrialItem(
            icon: Icons.star,
            text: 'Plan anual: ‚Ç¨19.99/a√±o (44% ahorro)',
            color: Colors.orange,
          ),
        ],
      ),
    );
  }

  Widget _buildAfterTrialItem({
    required IconData icon,
    required String text,
    required Color color,
  }) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 8),
      child: Row(
        children: [
          Icon(icon, color: color, size: 20),
          const SizedBox(width: 12),
          Expanded(
            child: Text(
              text,
              style: const TextStyle(fontSize: 14, color: Colors.black87),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildStartTrialButton() {
    return ElevatedButton(
      onPressed: _isProcessing ? null : _startTrial,
      style: ElevatedButton.styleFrom(
        backgroundColor: Colors.blue[600],
        foregroundColor: Colors.white,
        padding: const EdgeInsets.symmetric(vertical: 16),
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
        elevation: 2,
      ),
      child:
          _isProcessing
              ? const SizedBox(
                height: 20,
                width: 20,
                child: CircularProgressIndicator(
                  strokeWidth: 2,
                  valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                ),
              )
              : const Text(
                'INICIAR PRUEBA GRATUITA',
                style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
              ),
    );
  }

  Widget _buildLegalInfo() {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey[50],
        borderRadius: BorderRadius.circular(12),
        border: Border.all(color: Colors.grey[300]!),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text(
            'Informaci√≥n importante:',
            style: TextStyle(
              fontSize: 14,
              fontWeight: FontWeight.bold,
              color: Colors.black87,
            ),
          ),
          const SizedBox(height: 8),
          Text(
            '‚Ä¢ Al tocar "Iniciar Prueba Gratuita" procesaremos tu compra gratuita a trav√©s del App Store.\n'
            '‚Ä¢ Tendr√°s acceso completo a funciones premium durante 7 d√≠as.\n'
            '‚Ä¢ Despu√©s del per√≠odo de prueba, las funciones premium requerir√°n suscripci√≥n.\n'
            '‚Ä¢ Las funciones b√°sicas de la app permanecen siempre gratuitas.\n'
            '‚Ä¢ Puedes cancelar en cualquier momento desde la configuraci√≥n de tu cuenta.',
            style: TextStyle(
              fontSize: 12,
              color: Colors.grey[600],
              height: 1.4,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildTrialUnavailableView() {
    return Center(
      child: Padding(
        padding: const EdgeInsets.all(24),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(Icons.info_outline, size: 80, color: Colors.grey[400]),
            const SizedBox(height: 24),
            Text(
              'Prueba Gratuita No Disponible',
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
                color: Colors.grey[700],
              ),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 16),
            Text(
              'Ya has usado tu prueba gratuita de 7 d√≠as o tienes una suscripci√≥n activa.',
              style: TextStyle(fontSize: 16, color: Colors.grey[600]),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 32),
            ElevatedButton(
              onPressed: () {
                Navigator.pushReplacementNamed(context, '/remove-ads');
              },
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.blue[600],
                foregroundColor: Colors.white,
                padding: const EdgeInsets.symmetric(
                  vertical: 16,
                  horizontal: 24,
                ),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(12),
                ),
              ),
              child: const Text(
                'Ver Planes Premium',
                style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildErrorView() {
    return Center(
      child: Padding(
        padding: const EdgeInsets.all(24),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(Icons.error_outline, size: 80, color: Colors.red[400]),
            const SizedBox(height: 24),
            Text(
              'Error al Cargar',
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
                color: Colors.red[700],
              ),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 16),
            Text(
              'Hubo un problema al verificar tu elegibilidad para la prueba gratuita.',
              style: TextStyle(fontSize: 16, color: Colors.grey[600]),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 32),
            ElevatedButton(
              onPressed: () {
                setState(() {
                  // Forzar recarga
                });
              },
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.red[600],
                foregroundColor: Colors.white,
                padding: const EdgeInsets.symmetric(
                  vertical: 16,
                  horizontal: 24,
                ),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(12),
                ),
              ),
              child: const Text(
                'Reintentar',
                style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
              ),
            ),
          ],
        ),
      ),
    );
  }

  Future<void> _startTrial() async {
    setState(() {
      _isProcessing = true;
    });

    try {
      final purchaseNotifier = ref.read(purchaseProvider.notifier);
      final success = await purchaseNotifier.startTrial();

      if (success) {
        if (mounted) {
          ScaffoldMessenger.of(context).showSnackBar(
            const SnackBar(
              content: Text(
                '¬°Prueba gratuita activada! Disfruta 7 d√≠as de premium.',
              ),
              backgroundColor: Colors.green,
            ),
          );
          Navigator.pop(context);
        }
      } else {
        if (mounted) {
          ScaffoldMessenger.of(context).showSnackBar(
            const SnackBar(
              content: Text(
                'No se pudo iniciar la prueba gratuita. Int√©ntalo de nuevo.',
              ),
              backgroundColor: Colors.red,
            ),
          );
        }
      }
    } catch (e) {
      if (mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Error: $e'), backgroundColor: Colors.red),
        );
      }
    } finally {
      if (mounted) {
        setState(() {
          _isProcessing = false;
        });
      }
    }
  }
}
